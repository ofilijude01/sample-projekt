# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  update_environment:
      steps:
        - run:
            name: Update Cloudformation Stack
            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
            when: on_fail
            command: |
              aws cloudformation update-stack \
                --template-body template.yml \
                --stack-name myStack \
                --region us-west-2
              
  destroy_environment:
      steps:
        - run:
            name: Destroy environment
            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
            when: on_fail
            command: |
              aws cloudformation delete-stack --stack-name myStack
              
  create_inventory_file:
      steps:
        - run: echo "[all]" > ~/inventory.txt
        - run:
            name: create and update ansible inventory file 
            command: |
              aws ec2 describe-instances \
                --query 'Reservations[*].Instances[*].PublicIpAddress' \
                --filters "Name=tag:Project,Values=udacity" \
                --output text >> ~/inventory.txt
        - persist_to_workspace:
            root: ~/
            paths: 
              - inventory.txt 

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # other images: circleci/node:13.8.0
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: echo "Begin"
      - run: 
          name: "Print an env var that is part of our context"
          command: |
            echo $MY_ENV_VAR
            echo "End"
            
  # Exercise: Config and Deployment
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli #amazon aws-cli image
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            #--stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack \
                --region us-west-2
        - run: # install tar utility which is not present in this image but it is required. Please install it to have workflow workspace capability.
             name: Install tar utility
             command: |
               yum install -y tar gzip
        - update_environment
        - destroy_environment
        - create_inventory_file

  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run: export ANSIBLE_HOST_KEY_CHECKING=False
      - attach_workspace:
          at: ~/
      - add_ssh_keys:
          fingerprints: 
             - "78:06:23:25:0b:88:07:91:6c:c1:f9:1a:0a:d8:5b:3c"
      - run:
          name: Configure Ansible
          command: |
             apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i ~/inventory.txt main.yml

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  setup-ansible-env-workflow:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure
