# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  update_environment:
      steps:
        - run:
            name: Update Cloudformation Stack
            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
            when: on_fail
            command: |
              aws cloudformation update-stack \
                --template-body template.yml \
                --stack-name myStack \
                --region us-west-2
              
  destroy_environment:
      steps:
        - run:
            name: Destroy environment
            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
            when: on_fail
            command: |
              aws cloudformation delete-stack --stack-name myStack
              
  create_inventory_file:
      steps:
        - run: echo "[all]" > ~/inventory.txt
        - run:
            name: create and update ansible inventory file 
            command: |
              aws ec2 describe-instances \
                --query 'Reservations[*].Instances[*].PublicIpAddress' \
                --filters "Name=tag:Project,Values=udacity" \
                --output text >> ~/inventory.txt
        - persist_to_workspace:
            root: ~/
            paths: 
              - inventory.txt 

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run: echo "Begin"
      - run: cat ~/inventory.txt 
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
          
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo hello
      - run: echo "THIS IS A SAMPLE TEXT" > ~/output.txt  
      - persist_to_workspace:
          root: ~/
          paths: 
            - output.txt 
            
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: echo "Begin"
      - run: cat ~/output.txt 
      - run: 
          name: "Print an env var that is part of our context"
          command: |
            echo $MY_ENV_VAR
            echo "End"
            
   # Exercise: Config and Deployment
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli #amazon aws-cli image
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            #--stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack \
                --region us-west-2
        - update_environment
        - destroy_environment
        - create_inventory_file

  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["fc:62:ed:26:6c:b3:e1:ed:cf:42:b5:5a:e1:a2:06:ed"] 
      - run:
          name: Install Ansible
          command: |
            # Install Ansible
            sudo apt update
            sudo apt install software-properties-common
            sudo add-apt-repository --yes --update ppa:ansible/ansible
            sudo apt install ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            # Your command
            ansible-playbook -i inventory main.yml

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  setup-ansible-env-workflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure: 
      #    requires:
      #      - create_infrastructure
      
  say-hello-workflow:
    jobs:
      - say-hello
  #    - print_hello
  #    - print_world:
  #        requires:
  #          - print_hello
